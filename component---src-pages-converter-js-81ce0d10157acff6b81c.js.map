{"version":3,"sources":["webpack:///./src/components/TimeConverter/TimeConverter.js","webpack:///./src/pages/converter.js"],"names":["TimeConverter","props","timeNowFormat","dateNowFormat","namedOffsetFormat","handleChange","startDate","setState","state","singaporeTime","DateTime","local","setZone","toFormat","singaporeDate","singaporeNamedOffset","Date","componentDidMount","this","timerID","setInterval","tick","componentWillUnmount","clearInterval","render","className","css","mainTimeGroup","timeNow","dateNow","namedOffsetNow","Component","Converter","title"],"mappings":"oMA4DeA,E,oBAhDb,WAAaC,GAAQ,IAAD,SAClB,cAAMA,IAAN,MALFC,cAAgB,cAII,EAHpBC,cAAgB,cAGI,EAFpBC,kBAAoB,QAEA,EA2BpBC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZD,eA3BF,EAAKE,MAAQ,CACXC,cAAeC,WAASC,QAAQC,QAAQ,kBAAkBC,SAAS,EAAKX,eACxEY,cAAeJ,WAASC,QAAQC,QAAQ,kBAAkBC,SAAS,EAAKV,eACxEY,qBAAsBL,WAASC,QAAQC,QAAQ,kBAAkBC,SAAS,EAAKT,mBAC/EE,UAAW,IAAIU,MANC,E,kHAUpBC,kBAAA,WAAsB,IAAD,OACnBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,M,EAIJC,qBAAA,WACEC,cAAcL,KAAKC,U,EAGrBE,KAAA,WACEH,KAAKX,SAAS,CACZE,cAAeC,WAASC,QAAQC,QAAQ,kBAAkBC,SAASK,KAAKhB,kB,EAU5EsB,OAAA,WACE,OACE,6BACE,yBAAKC,UAAWC,IAAIC,eAApB,aAEE,yBAAKF,UAAWC,IAAIE,SAAUV,KAAKV,MAAMC,eACzC,yBAAKgB,UAAWC,IAAIG,SAAUX,KAAKV,MAAMM,eACzC,yBAAKW,UAAWC,IAAII,gBAAiBZ,KAAKV,MAAMO,yB,GA7C9BgB,aCQbC,UATG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,cACX,6BACE,kBAAC,EAAD","file":"component---src-pages-converter-js-81ce0d10157acff6b81c.js","sourcesContent":["// import PropTypes from \"prop-types\"\r\nimport React, {Component} from \"react\"\r\n// import DatePicker from \"react-datepicker\";\r\nimport css from \"./TimeConverter.module.css\"\r\nimport { DateTime } from \"luxon\"\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass TimeConverter extends Component {\r\n  timeNowFormat = \"H':'mm':'ss\"\r\n  dateNowFormat = \"ccc d LLL y\"\r\n  namedOffsetFormat = \"ZZZZZ\"\r\n  \r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      singaporeTime: DateTime.local().setZone(\"Asia/Singapore\").toFormat(this.timeNowFormat),\r\n      singaporeDate: DateTime.local().setZone(\"Asia/Singapore\").toFormat(this.dateNowFormat),\r\n      singaporeNamedOffset: DateTime.local().setZone(\"Asia/Singapore\").toFormat(this.namedOffsetFormat),\r\n      startDate: new Date()\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    )\r\n  }\r\n  \r\n  componentWillUnmount () {\r\n    clearInterval(this.timerID)\r\n  }\r\n  \r\n  tick () {\r\n    this.setState({\r\n      singaporeTime: DateTime.local().setZone(\"Asia/Singapore\").toFormat(this.timeNowFormat)\r\n    })\r\n  }\r\n  \r\n  handleChange = startDate => {\r\n    this.setState({\r\n      startDate\r\n    })\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className={css.mainTimeGroup}>\r\n          Singapore: \r\n          <div className={css.timeNow}>{this.state.singaporeTime}</div>\r\n          <div className={css.dateNow}>{this.state.singaporeDate}</div>\r\n          <div className={css.namedOffsetNow}>{this.state.singaporeNamedOffset}</div>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeConverter\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport TimeConverter from '../components/TimeConverter/TimeConverter'\r\n\r\nconst Converter = () => (\r\n  <Layout>\r\n    <SEO title=\"Converter\" />\r\n    <div>\r\n      <TimeConverter />\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nexport default Converter\r\n"],"sourceRoot":""}