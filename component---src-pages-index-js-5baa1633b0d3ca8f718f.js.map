{"version":3,"sources":["webpack:///./src/components/TimeRightNow/Dst.module.css","webpack:///./src/components/TimeRightNow/OriginCard.js","webpack:///./src/components/TimeRightNow/Card.js","webpack:///./src/components/TimeRightNow/TimeZoneSelector.js","webpack:///./src/components/TimeRightNow/Dst.js","webpack:///./src/components/TimeRightNow/INITIAL_CARD_ZONES.js","webpack:///./src/components/TimeRightNow/TimeRightNow.js","webpack:///./src/pages/index.js","webpack:///./src/components/TimeRightNow/TimeRightNow.module.css","webpack:///./src/components/TimeRightNow/Card.module.css","webpack:///./src/components/TimeRightNow/TimeZoneSelector.module.css","webpack:///./src/components/TimeRightNow/OriginCard.module.css"],"names":["module","exports","OriginCard","props","className","css","mainTimeGroup","location","timeNow","setZone","timeZone","toFormat","dateNow","namedOffsetNow","Card","originTime","targetTime","origin","difference","timeGroup","time","dayDiffMessage","originTimeZone","toObject","day","date","namedOffset","deleteButton","onClick","index","TimeZoneSelector","role","handleMainTextInput","bind","handleMainSelectChange","handleAddTextInput","resetButtonClick","addButtonClick","state","selectOptions","TIMEZONES_WITH_COMMENTS","addSelectOptions","selectedMainTimezone","selectedAddTimezone","event","iANATimeZone","target","value","this","selectMainTimeZone","setState","select","document","querySelector","input","addInput","DateTime","local","zone","name","resetAllButtonClick","timeZoneOptions","forEach","timeZoneFromData","TZ","toLowerCase","trim","inputText","indexOf","push","length","render","inputs","buttons","options","map","timezone","key","addOptions","inputContainer","onChange","mainContainer","Component","Dst","dateNowFormat","dstChangeDetection","leapYearMsg","dstYear","dstChangeTimeZone","startOfYearDate","fromObject","year","month","hour","minute","second","endOfYearDate","daysInYear","Interval","fromDateTimes","startOf","endOf","splitBy","days","d","start","dstStatuses","dstChangeDates","isInDST","i","finalMessage","dstChangeDatesJoined","join","isInLeapYear","INITIAL_CARD_ZONES","initialMainZone","TimeRightNow","timeNowFormat","namedOffsetFormat","narrowOffsetFormat","resetAll","changeMainTimeZone","addTimeZone","removeTimeZone","mainTimeZone","cardZones","componentDidMount","storedCardZones","JSON","parse","window","localStorage","getItem","setItem","stringify","storedMainZone","timerID","setInterval","tick","componentWillUnmount","clearInterval","iANATZName","timeZoneToBeAdded","newTimeZones","concat","indexToRemove","filtered","filter","cards","cardZone","mainTimeContainer","TimeContainer","IndexPage","title"],"mappings":"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","file":"component---src-pages-index-js-5baa1633b0d3ca8f718f.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTimeGroup\":\"Dst-module--mainTimeGroup--3kFX8\",\"timeNow\":\"Dst-module--timeNow--2FUbS\",\"dateNow\":\"Dst-module--dateNow--3mINI\",\"namedOffsetNow\":\"Dst-module--namedOffsetNow--19PNZ\",\"button\":\"Dst-module--button--3WMmG\",\"buttonContainer\":\"Dst-module--buttonContainer--3hvkT\"};","import React from \"react\"\r\nimport css from \"./OriginCard.module.css\"\r\n\r\nfunction OriginCard (props) {\r\n  const timeNowFormat = \"H':'mm':'ss\"\r\n  const dateNowFormat = \"ccc d LLL y\"\r\n  const namedOffsetFormat = \"ZZZZZ\"\r\n  \r\n  return (\r\n    <section className={css.mainTimeGroup}>\r\n      {props.location}:  \r\n      <div className={css.timeNow}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(timeNowFormat)}\r\n      </div>\r\n      <div className={css.dateNow}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(dateNowFormat)}\r\n      </div>\r\n      <div className={css.namedOffsetNow}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(namedOffsetFormat)}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default OriginCard","import React from \"react\"\r\nimport css from \"./Card.module.css\"\r\n\r\nfunction Card (props) {\r\n  const timeNowFormat = \"H':'mm':'ss\"\r\n  const dateNowFormat = \"ccc d LLL y\"\r\n  const namedOffsetFormat = \"ZZZZZ\"\r\n  \r\n  function dayDiffMessage (originTime, targetTime) {\r\n    const origin = originTime.toObject().day\r\n    const target = targetTime.toObject().day\r\n    const difference = target - origin\r\n    \r\n    if (difference === 0) {\r\n      return ``\r\n    } else if (difference === -1) {\r\n      return `(Previous Day)`\r\n    } else if (difference === 1) {\r\n      return `(Next Day)`\r\n    }\r\n  }\r\n  \r\n  function deleteButtonClick () {\r\n    props.deleteButton(props.index)\r\n  }\r\n  \r\n  return (\r\n    <section className={css.timeGroup}>\r\n      {props.location}: \r\n      <div className={css.time}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(timeNowFormat)}\r\n      </div>\r\n      <div className={css.dayDiffMessage}>\r\n        {dayDiffMessage(\r\n          props.timeNow.setZone(props.originTimeZone), \r\n          props.timeNow.setZone(props.timeZone)\r\n        )}\r\n      </div>\r\n      <div className={css.date}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(dateNowFormat)}\r\n      </div>\r\n      <div className={css.namedOffset}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(namedOffsetFormat)}\r\n      </div>\r\n      <div>\r\n        <button \r\n          className={css.deleteButton}\r\n          onClick={deleteButtonClick}\r\n          >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Card","import React, {Component} from \"react\"\r\nimport {DateTime} from \"luxon\"\r\nimport css from \"./TimeZoneSelector.module.css\"\r\nimport {TIMEZONES_WITH_COMMENTS} from './TIMEZONES_WITH_COMMENTS'\r\n\r\nclass TimeZoneSelector extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.role = props.role\r\n    this.handleMainTextInput = this.handleMainTextInput.bind(this)\r\n    this.handleMainSelectChange = this.handleMainSelectChange.bind(this)\r\n    this.handleAddTextInput = this.handleAddTextInput.bind(this)\r\n    this.resetButtonClick = this.resetButtonClick.bind(this)\r\n    this.addButtonClick = this.addButtonClick.bind(this)\r\n    this.state = {\r\n      selectOptions: TIMEZONES_WITH_COMMENTS,\r\n      addSelectOptions: TIMEZONES_WITH_COMMENTS,\r\n      selectedMainTimezone: this.props.timeZone,\r\n      selectedAddTimezone: this.props.timeZone\r\n    }\r\n  }\r\n  \r\n  handleMainSelectChange (event) {\r\n    const iANATimeZone = event.target.value\r\n    this.props.selectMainTimeZone(iANATimeZone)\r\n    this.setState({selectedMainTimezone: iANATimeZone})\r\n  }\r\n  \r\n  addButtonClick () {\r\n    const select = document.querySelector('.addTimeZoneSelect')\r\n    this.props.addButtonClick(select.value)\r\n  }\r\n  \r\n  resetButtonClick () {\r\n    const input = document.querySelector('.mainTimeZoneInput')\r\n    const addInput = document.querySelector('.addTimeZoneInput')\r\n    input.value = ''\r\n    addInput.value = ''\r\n    this.setState({\r\n      selectOptions: TIMEZONES_WITH_COMMENTS,\r\n      addSelectOptions: TIMEZONES_WITH_COMMENTS,\r\n      selectedMainTimezone: DateTime.local().zone.name,\r\n      selectedAddTimezone: DateTime.local().zone.name\r\n    })\r\n    this.props.resetAllButtonClick()\r\n  }\r\n  \r\n  handleMainTextInput (event) {\r\n    let timeZoneOptions = []\r\n    TIMEZONES_WITH_COMMENTS.forEach(function (timeZone, index) {\r\n      const timeZoneFromData = timeZone.TZ.toLowerCase().trim()\r\n      const inputText = event.target.value.toLowerCase().trim()\r\n      if (timeZoneFromData.indexOf(inputText) !== -1) {\r\n        timeZoneOptions.push(timeZone)\r\n      }\r\n    })\r\n    if (timeZoneOptions.length === 0) {\r\n      timeZoneOptions = TIMEZONES_WITH_COMMENTS\r\n    }\r\n    const iANATimeZone = timeZoneOptions[0].TZ\r\n    this.props.selectMainTimeZone(iANATimeZone)\r\n    this.setState({\r\n      selectOptions: timeZoneOptions,\r\n      selectedMainTimezone: iANATimeZone\r\n    })\r\n  }\r\n  \r\n  handleAddTextInput (event) {\r\n    let timeZoneOptions = []\r\n    TIMEZONES_WITH_COMMENTS.forEach(function (timeZone, index) {\r\n      const timeZoneFromData = timeZone.TZ.toLowerCase().trim()\r\n      const inputText = event.target.value.toLowerCase().trim()\r\n      if (timeZoneFromData.indexOf(inputText) !== -1) {\r\n        timeZoneOptions.push(timeZone)\r\n      }\r\n    })\r\n    if (timeZoneOptions.length === 0) {\r\n      timeZoneOptions = TIMEZONES_WITH_COMMENTS\r\n    }\r\n    const iANATimeZone = timeZoneOptions[0].TZ\r\n    // this.props.selectTimeZone(iANATimeZone)\r\n    this.setState({\r\n      addSelectOptions: timeZoneOptions,\r\n      selectedAddTimezone: iANATimeZone\r\n    })\r\n  }\r\n  \r\n  render () {\r\n    const options = this.state.selectOptions.map((timezone) =>\r\n      <option key={timezone.TZ}>{timezone.TZ}</option>\r\n    )\r\n    \r\n    const addOptions = this.state.addSelectOptions.map((timezone) =>\r\n      <option key={timezone.TZ}>{timezone.TZ}</option>\r\n    )\r\n    \r\n    // let toggleBox\r\n    let inputs\r\n    let buttons\r\n    \r\n    if (this.role === 'Add Card') {\r\n      // toggleBox = (\r\n      //   <div className={css.toggleOptions}>\r\n      //     <span className={css.plusSymbol}>+</span>\r\n      //   </div>\r\n      // )\r\n      inputs = (\r\n        <div>\r\n          {/*toggleBox*/}\r\n          <div className={css.inputContainer}>\r\n            <input className=\"addTimeZoneInput\" onChange={this.handleAddTextInput} />\r\n          </div>\r\n          <select \r\n            value={this.state.selectedMainTimezone} \r\n            name=\"addTimezones\" \r\n            className=\"addTimeZoneSelect\">\r\n            {addOptions}\r\n          </select>\r\n        </div>\r\n      )\r\n      \r\n      buttons = (\r\n        <div>\r\n          <div>\r\n            <button \r\n              className={css.deleteButton}\r\n              onClick={this.addButtonClick}\r\n              >\r\n              Add\r\n            </button>\r\n          </div>\r\n          {/*<div><button className={css.deleteButton}>Hide Options</button></div>*/}\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    if (this.role === 'Main') {\r\n      inputs = (\r\n        <div>\r\n          <div className={css.inputContainer}>\r\n            <input className=\"mainTimeZoneInput\" onChange={this.handleMainTextInput} />\r\n          </div>\r\n          <select \r\n            value={this.props.timeZone}\r\n            onChange={this.handleMainSelectChange} \r\n            name=\"timezones\" \r\n            className=\"mainTimeZoneSelect\">\r\n            {options}\r\n          </select>\r\n        </div>\r\n      )\r\n      \r\n      buttons = (\r\n        <div>\r\n          <button \r\n            className={css.deleteButton}\r\n            onClick={this.resetButtonClick}\r\n            >Reset All</button>\r\n        </div>\r\n      )\r\n    } \r\n    \r\n    return (\r\n      <section className={css.mainContainer}>\r\n        {inputs}\r\n        {buttons}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeZoneSelector","import React, {Component} from \"react\"\r\nimport css from \"./Dst.module.css\"\r\nimport {DateTime, Interval} from \"luxon\"\r\n\r\nclass Dst extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.dateNowFormat = \"ccc d LLL y\"\r\n    this.dstChangeDetection = this.dstChangeDetection.bind(this)\r\n    this.leapYearMsg = this.leapYearMsg.bind(this)\r\n    this.state = {}\r\n  }\r\n  \r\n  dstChangeDetection (dstYear, dstChangeTimeZone) {\r\n    const startOfYearDate = DateTime.fromObject({ \r\n      year: dstYear, month: 1, day: 1,\r\n      hour: 0, minute: 0, second: 0, zone: dstChangeTimeZone })\r\n    \r\n    const endOfYearDate = DateTime.fromObject({ \r\n      year: dstYear, month: 12, day: 31,\r\n      hour: 23, minute: 59, second: 59, zone: dstChangeTimeZone })\r\n    \r\n    const daysInYear = Interval.fromDateTimes(\r\n      startOfYearDate.startOf(\"day\"), \r\n      endOfYearDate.endOf(\"day\"))\r\n    .splitBy({days: 1}).map(d => d.start)\r\n    \r\n    const dstStatuses = []\r\n    \r\n    const dstChangeDates = []\r\n    \r\n    daysInYear.forEach(function (day) {\r\n      if (day.isInDST === true) {\r\n        dstStatuses.push(\"In DST\")\r\n      } \r\n      if (day.isInDST === false) {\r\n        dstStatuses.push(\"Not In DST\")\r\n      }\r\n    })\r\n    \r\n    for (var i = 0; i < dstStatuses.length; i++) {\r\n      if (dstStatuses[i + 1]) {\r\n        if (\r\n          (dstStatuses[i] === \"In DST\" && dstStatuses[i + 1] === \"Not In DST\") ||\r\n          (dstStatuses[i] === \"Not In DST\" && dstStatuses[i + 1] === \"In DST\")\r\n        ) {\r\n          dstChangeDates.push(daysInYear[i].toFormat(this.dateNowFormat))\r\n        }\r\n      }\r\n    }\r\n    \r\n    const dstChangeDatesJoined = dstChangeDates.join(' and ')\r\n    \r\n    let finalMessage\r\n    \r\n    if (dstChangeDates.length === 0) {\r\n      finalMessage = ``\r\n    } \r\n    \r\n    if (dstChangeDates.length > 0) {\r\n      finalMessage = `DST changes on (approx.): ${dstChangeDatesJoined} in ${dstChangeTimeZone}.`\r\n    }\r\n    \r\n    return finalMessage\r\n  }\r\n  \r\n  leapYearMsg (time) {\r\n    if (time.isInLeapYear) {\r\n      return `February this year has 29 days.`\r\n    } else {\r\n      return `February this year has 28 days.`\r\n    }\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <section className={css.mainTimeGroup}>\r\n        <div>\r\n          <div>\r\n            {this.leapYearMsg(this.props.timeNow)}\r\n          </div>\r\n          <div>\r\n            {this.dstChangeDetection(this.props.timeNow.year, this.props.timeZone)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dst","const INITIAL_CARD_ZONES = [\r\n  { location: 'Boston', timeZone: 'America/New_York' },\r\n  { location: 'New York', timeZone: 'America/New_York' }, \r\n  { location: 'Freiburg', timeZone: 'Europe/Berlin' },\r\n  { location: 'Los Angeles', timeZone: 'America/Los_Angeles' },\r\n  { location: 'Mumbai', timeZone: 'Asia/Kolkata' },\r\n  { location: 'London', timeZone: 'Europe/London' },\r\n  { location: 'Sydney', timeZone: 'Australia/Sydney' },\r\n  { location: 'Shanghai', timeZone: 'Asia/Shanghai' }\r\n]\r\n\r\nexport {INITIAL_CARD_ZONES}","import React, {Component} from \"react\"\r\nimport {DateTime} from \"luxon\"\r\nimport OriginCard from './OriginCard'\r\nimport Card from './Card'\r\nimport TimeZoneSelector from './TimeZoneSelector'\r\nimport Dst from './Dst'\r\nimport css from \"./TimeRightNow.module.css\"\r\nimport {INITIAL_CARD_ZONES} from './INITIAL_CARD_ZONES'\r\n\r\nconst initialMainZone = { location: 'Local Time', timeZone: DateTime.local().zone.name }\r\n\r\nclass TimeRightNow extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.timeNowFormat = \"H':'mm':'ss\"\r\n    this.dateNowFormat = \"ccc d LLL y\"\r\n    this.namedOffsetFormat = \"ZZZZZ\"\r\n    this.narrowOffsetFormat = \"Z\"\r\n    this.resetAll = this.resetAll.bind(this)\r\n    this.changeMainTimeZone = this.changeMainTimeZone.bind(this)\r\n    this.addTimeZone = this.addTimeZone.bind(this)\r\n    this.removeTimeZone = this.removeTimeZone.bind(this)\r\n    this.state = {\r\n      timeNow: DateTime.local().setZone(initialMainZone.timeZone),\r\n      mainTimeZone: initialMainZone.timeZone,\r\n      cardZones: INITIAL_CARD_ZONES\r\n    }\r\n  }\r\n  \r\n  componentDidMount () {\r\n    this.storedCardZones = JSON.parse(window.localStorage.getItem('timeRightNow-cardZones'))\r\n    // These sorts of checks are problematic.\r\n    if (!this.storedCardZones) {\r\n      window.localStorage.setItem('timeRightNow-cardZones', JSON.stringify(INITIAL_CARD_ZONES))\r\n      this.storedCardZones = INITIAL_CARD_ZONES\r\n    }\r\n    \r\n    this.storedMainZone = JSON.parse(window.localStorage.getItem('timeRightNow-mainZone'))\r\n    if (!this.storedMainZone) {\r\n      window.localStorage.setItem('timeRightNow-mainZone', JSON.stringify(initialMainZone))\r\n      this.storedMainZone = initialMainZone\r\n    }\r\n    \r\n    this.setState({\r\n      timeNow: DateTime.local().setZone(this.storedMainZone.timeZone),\r\n      mainTimeZone: this.storedMainZone,\r\n      cardZones: this.storedCardZones\r\n    })\r\n    \r\n    this.timerID = setInterval(() => this.tick(), 1000)\r\n  }\r\n  \r\n  componentWillUnmount () {\r\n    clearInterval(this.timerID)\r\n  }\r\n  \r\n  tick () {\r\n    // const timeNow = DateTime.local().plus({hours: -3})\r\n    this.setState({ timeNow: DateTime.local().setZone(this.storedMainZone.timeZone) })\r\n  }\r\n  \r\n  resetAll () {\r\n    const initialMainZone = { location: 'Local Time', timeZone: DateTime.local().zone.name }\r\n    window.localStorage.setItem('timeRightNow-mainZone', JSON.stringify(initialMainZone))\r\n    window.localStorage.setItem('timeRightNow-cardZones', JSON.stringify(INITIAL_CARD_ZONES))\r\n    this.setState({\r\n      mainTimeZone: initialMainZone,\r\n      cardZones: INITIAL_CARD_ZONES\r\n    })\r\n  }\r\n  \r\n  changeMainTimeZone (iANATZName) {\r\n    let timeZone = { location: iANATZName, timeZone: iANATZName }\r\n    window.localStorage.setItem('timeRightNow-mainZone', JSON.stringify(timeZone))\r\n    this.setState({ mainTimeZone: timeZone })\r\n  }\r\n  \r\n  addTimeZone (iANATZName) {\r\n    let timeZoneToBeAdded = { location: iANATZName, timeZone: iANATZName }\r\n    let oldTimeZones = JSON.parse(window.localStorage.getItem('timeRightNow-cardZones'))\r\n    let newTimeZones = oldTimeZones.concat([timeZoneToBeAdded])\r\n    window.localStorage.setItem('timeRightNow-cardZones', JSON.stringify(newTimeZones))\r\n    this.setState({ cardZones: newTimeZones })\r\n  }\r\n  \r\n  removeTimeZone (indexToRemove) {\r\n    let oldTimeZones = JSON.parse(window.localStorage.getItem('timeRightNow-cardZones'))\r\n    let filtered = oldTimeZones.filter(checkIndex)\r\n    function checkIndex (timeZone, index) {\r\n      if (index !== indexToRemove) return timeZone\r\n    }\r\n    window.localStorage.setItem('timeRightNow-cardZones', JSON.stringify(filtered))\r\n    this.setState({ cardZones: filtered })\r\n  }\r\n  \r\n  render () {\r\n    const cards = this.state.cardZones.map((cardZone, index) => {\r\n      return (\r\n        <Card\r\n          key={index}\r\n          index={index}\r\n          location={cardZone.location}\r\n          timeZone={cardZone.timeZone}\r\n          timeNow={this.state.timeNow}\r\n          originTimeZone={this.state.mainTimeZone.timeZone}\r\n          deleteButton={this.removeTimeZone}\r\n        />\r\n      )\r\n    })\r\n    \r\n    return (\r\n      <div>\r\n        <div className={css.mainTimeContainer}>\r\n          <OriginCard \r\n            location={this.state.mainTimeZone.location}\r\n            timeZone={this.state.mainTimeZone.timeZone}\r\n            timeNow={this.state.timeNow} />\r\n          <TimeZoneSelector \r\n            role=\"Main\"\r\n            timeZone={this.state.mainTimeZone.timeZone}\r\n            resetAllButtonClick={this.resetAll}\r\n            selectMainTimeZone={this.changeMainTimeZone}\r\n            />\r\n          <Dst \r\n            timeNow={this.state.timeNow}\r\n            timeZone={this.state.mainTimeZone.timeZone}\r\n          />\r\n        </div>\r\n        <div className={css.TimeContainer}>\r\n          {cards}\r\n          <TimeZoneSelector \r\n            role=\"Add Card\"\r\n            addButtonClick={this.addTimeZone}\r\n            />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeRightNow\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport TimeRightNow from '../components/TimeRightNow/TimeRightNow'\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <TimeRightNow />\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTimeContainer\":\"TimeRightNow-module--mainTimeContainer--KDv0R\",\"TimeContainer\":\"TimeRightNow-module--TimeContainer--mWAPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Card-module--time--u1Xt_\",\"date\":\"Card-module--date--1ykwH\",\"timeGroup\":\"Card-module--timeGroup--psE93\",\"namedOffset\":\"Card-module--namedOffset--1rDg6\",\"dayDiffMessage\":\"Card-module--dayDiffMessage--3rNG5\",\"deleteButton\":\"Card-module--deleteButton--3mEPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"TimeZoneSelector-module--mainContainer--_UCVr\",\"inputContainer\":\"TimeZoneSelector-module--inputContainer--2KuyN\",\"deleteButton\":\"TimeZoneSelector-module--deleteButton--3VlYk\",\"toggleOptions\":\"TimeZoneSelector-module--toggleOptions--3jeO0\",\"plusSymbol\":\"TimeZoneSelector-module--plusSymbol--_SSVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTimeGroup\":\"OriginCard-module--mainTimeGroup--MwH4E\",\"timeNow\":\"OriginCard-module--timeNow--iDzyr\",\"dateNow\":\"OriginCard-module--dateNow--1Hgck\",\"namedOffsetNow\":\"OriginCard-module--namedOffsetNow--2VU4n\"};"],"sourceRoot":""}