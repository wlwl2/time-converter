{"version":3,"sources":["webpack:///./src/components/TimeRightNow/OriginCard.js","webpack:///./src/components/TimeRightNow/Card.js","webpack:///./src/components/TimeRightNow/TimeZoneSelector.js","webpack:///./src/components/TimeRightNow/INITIAL_CARD_ZONES.js","webpack:///./src/components/TimeRightNow/TimeRightNow.js","webpack:///./src/pages/index.js"],"names":["OriginCard","props","className","css","mainTimeGroup","location","timeNow","setZone","timeZone","toFormat","dateNow","namedOffsetNow","Card","originTime","targetTime","origin","difference","timeGroup","time","dayDiffMessage","originTimeZone","toObject","day","date","namedOffset","deleteButton","onClick","index","TimeZoneSelector","role","handleMainTextInput","bind","handleMainSelectChange","handleAddTextInput","resetButtonClick","addButtonClick","state","selectOptions","TIMEZONES_WITH_COMMENTS","addSelectOptions","selectedMainTimezone","selectedAddTimezone","event","iANATimeZone","target","value","this","selectMainTimeZone","setState","select","document","querySelector","input","addInput","DateTime","local","zone","name","resetAllButtonClick","timeZoneOptions","forEach","timeZoneFromData","TZ","toLowerCase","trim","inputText","indexOf","push","length","render","inputs","buttons","options","map","timezone","key","addOptions","inputContainer","onChange","mainContainer","Component","INITIAL_CARD_ZONES","initialMainZone","TimeRightNow","timeNowFormat","dateNowFormat","namedOffsetFormat","narrowOffsetFormat","resetAll","changeMainTimeZone","addTimeZone","removeTimeZone","mainTimeZone","cardZones","componentDidMount","storedCardZones","JSON","parse","window","localStorage","getItem","setItem","stringify","storedMainZone","timerID","setInterval","tick","componentWillUnmount","clearInterval","iANATZName","timeZoneToBeAdded","newTimeZones","concat","indexToRemove","filtered","filter","cards","cardZone","mainTimeContainer","TimeContainer","IndexPage","title"],"mappings":"gMAwBeA,MArBf,SAAqBC,GAKnB,OACE,6BAASC,UAAWC,IAAIC,eACrBH,EAAMI,SADT,IAEE,yBAAKH,UAAWC,IAAIG,SACjBL,EAAMK,QAAQC,QAAQN,EAAMO,UAAUC,SARvB,gBAUlB,yBAAKP,UAAWC,IAAIO,SACjBT,EAAMK,QAAQC,QAAQN,EAAMO,UAAUC,SAVvB,gBAYlB,yBAAKP,UAAWC,IAAIQ,gBACjBV,EAAMK,QAAQC,QAAQN,EAAMO,UAAUC,SAZnB,Y,qBCkDbG,MArDf,SAAeX,GACb,IAIyBY,EAAYC,EAC7BC,EAEAC,EAeR,OACE,6BAASd,UAAWC,IAAIc,WACrBhB,EAAMI,SADT,IAEE,yBAAKH,UAAWC,IAAIe,MACjBjB,EAAMK,QAAQC,QAAQN,EAAMO,UAAUC,SA1BvB,gBA4BlB,yBAAKP,UAAWC,IAAIgB,iBAxBCN,EA0BjBZ,EAAMK,QAAQC,QAAQN,EAAMmB,gBA1BCN,EA2B7Bb,EAAMK,QAAQC,QAAQN,EAAMO,UA1B5BO,EAASF,EAAWQ,WAAWC,IAIlB,KAFbN,EADSF,EAAWO,WAAWC,IACTP,GAGpB,IACmB,IAAhBC,EACH,iBACkB,IAAfA,EACH,kBADD,IAqBL,yBAAKd,UAAWC,IAAIoB,MACjBtB,EAAMK,QAAQC,QAAQN,EAAMO,UAAUC,SAlCvB,gBAoClB,yBAAKP,UAAWC,IAAIqB,aACjBvB,EAAMK,QAAQC,QAAQN,EAAMO,UAAUC,SApCnB,UAsCtB,6BACE,4BACEP,UAAWC,IAAIsB,aACfC,QAzBR,WACEzB,EAAMwB,aAAaxB,EAAM0B,SAsBrB,a,gKC8HOC,E,oBArKb,WAAa3B,GAAQ,IAAD,SAClB,cAAMA,IAAN,MACK4B,KAAO5B,EAAM4B,KAClB,EAAKC,oBAAsB,EAAKA,oBAAoBC,KAAzB,MAC3B,EAAKC,uBAAyB,EAAKA,uBAAuBD,KAA5B,MAC9B,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,MAC1B,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,MACxB,EAAKI,eAAiB,EAAKA,eAAeJ,KAApB,MACtB,EAAKK,MAAQ,CACXC,cAAeC,IACfC,iBAAkBD,IAClBE,qBAAsB,EAAKvC,MAAMO,SACjCiC,oBAAqB,EAAKxC,MAAMO,UAZhB,E,kHAgBpBwB,uBAAA,SAAwBU,GACtB,IAAMC,EAAeD,EAAME,OAAOC,MAClCC,KAAK7C,MAAM8C,mBAAmBJ,GAC9BG,KAAKE,SAAS,CAACR,qBAAsBG,K,EAGvCR,eAAA,WACE,IAAMc,EAASC,SAASC,cAAc,sBACtCL,KAAK7C,MAAMkC,eAAec,EAAOJ,Q,EAGnCX,iBAAA,WACE,IAAMkB,EAAQF,SAASC,cAAc,sBAC/BE,EAAWH,SAASC,cAAc,qBACxCC,EAAMP,MAAQ,GACdQ,EAASR,MAAQ,GACjBC,KAAKE,SAAS,CACZX,cAAeC,IACfC,iBAAkBD,IAClBE,qBAAsBc,WAASC,QAAQC,KAAKC,KAC5ChB,oBAAqBa,WAASC,QAAQC,KAAKC,OAE7CX,KAAK7C,MAAMyD,uB,EAGb5B,oBAAA,SAAqBY,GACnB,IAAIiB,EAAkB,GACtBrB,IAAwBsB,SAAQ,SAAUpD,EAAUmB,GAClD,IAAMkC,EAAmBrD,EAASsD,GAAGC,cAAcC,OAC7CC,EAAYvB,EAAME,OAAOC,MAAMkB,cAAcC,QACN,IAAzCH,EAAiBK,QAAQD,IAC3BN,EAAgBQ,KAAK3D,MAGM,IAA3BmD,EAAgBS,SAClBT,EAAkBrB,KAEpB,IAAMK,EAAegB,EAAgB,GAAGG,GACxChB,KAAK7C,MAAM8C,mBAAmBJ,GAC9BG,KAAKE,SAAS,CACZX,cAAesB,EACfnB,qBAAsBG,K,EAI1BV,mBAAA,SAAoBS,GAClB,IAAIiB,EAAkB,GACtBrB,IAAwBsB,SAAQ,SAAUpD,EAAUmB,GAClD,IAAMkC,EAAmBrD,EAASsD,GAAGC,cAAcC,OAC7CC,EAAYvB,EAAME,OAAOC,MAAMkB,cAAcC,QACN,IAAzCH,EAAiBK,QAAQD,IAC3BN,EAAgBQ,KAAK3D,MAGM,IAA3BmD,EAAgBS,SAClBT,EAAkBrB,KAEpB,IAAMK,EAAegB,EAAgB,GAAGG,GAExChB,KAAKE,SAAS,CACZT,iBAAkBoB,EAClBlB,oBAAqBE,K,EAIzB0B,OAAA,WACE,IASIC,EACAC,EAVEC,EAAU1B,KAAKV,MAAMC,cAAcoC,KAAI,SAACC,GAAD,OAC3C,4BAAQC,IAAKD,EAASZ,IAAKY,EAASZ,OAGhCc,EAAa9B,KAAKV,MAAMG,iBAAiBkC,KAAI,SAACC,GAAD,OACjD,4BAAQC,IAAKD,EAASZ,IAAKY,EAASZ,OAqEtC,MA9DkB,aAAdhB,KAAKjB,OAMPyC,EACE,6BAEE,yBAAKpE,UAAWC,IAAI0E,gBAClB,2BAAO3E,UAAU,mBAAmB4E,SAAUhC,KAAKb,sBAErD,4BACEY,MAAOC,KAAKV,MAAMI,qBAClBiB,KAAK,eACLvD,UAAU,qBACT0E,IAKPL,EACE,6BACE,6BACE,4BACErE,UAAWC,IAAIsB,aACfC,QAASoB,KAAKX,gBAFhB,UAYU,SAAdW,KAAKjB,OACPyC,EACE,6BACE,yBAAKpE,UAAWC,IAAI0E,gBAClB,2BAAO3E,UAAU,oBAAoB4E,SAAUhC,KAAKhB,uBAEtD,4BACEe,MAAOC,KAAKV,MAAMI,qBAClBsC,SAAUhC,KAAKd,uBACfyB,KAAK,YACLvD,UAAU,sBACTsE,IAKPD,EACE,6BACE,4BACErE,UAAWC,IAAIsB,aACfC,QAASoB,KAAKZ,kBAFhB,eASJ,6BAAShC,UAAWC,IAAI4E,eACrBT,EACAC,I,GAhKsBS,a,qBCLzBC,EAAqB,CACzB,CAAE5E,SAAU,SAAUG,SAAU,oBAChC,CAAEH,SAAU,WAAYG,SAAU,oBAClC,CAAEH,SAAU,WAAYG,SAAU,iBAClC,CAAEH,SAAU,cAAeG,SAAU,uBACrC,CAAEH,SAAU,SAAUG,SAAU,gBAChC,CAAEH,SAAU,SAAUG,SAAU,iBAChC,CAAEH,SAAU,SAAUG,SAAU,oBAChC,CAAEH,SAAU,WAAYG,SAAU,kB,2HCApC,IAAM0E,EAAkB,CAAE7E,SAAU,aAAcG,SAAU8C,WAASC,QAAQC,KAAKC,MA+HnE0B,E,oBA5Hb,WAAalF,GAAQ,IAAD,SAClB,cAAMA,IAAN,MACKmF,cAAgB,cACrB,EAAKC,cAAgB,cACrB,EAAKC,kBAAoB,QACzB,EAAKC,mBAAqB,IAC1B,EAAKC,SAAW,EAAKA,SAASzD,KAAd,MAChB,EAAK0D,mBAAqB,EAAKA,mBAAmB1D,KAAxB,MAC1B,EAAK2D,YAAc,EAAKA,YAAY3D,KAAjB,MACnB,EAAK4D,eAAiB,EAAKA,eAAe5D,KAApB,MACtB,EAAKK,MAAQ,CACX9B,QAASgD,WAASC,QAAQhD,QAAQ2E,EAAgB1E,UAClDoF,aAAcV,EAAgB1E,SAC9BqF,UAAWZ,GAbK,E,kHAiBpBa,kBAAA,WAAsB,IAAD,OACnBhD,KAAKiD,gBAAkBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,2BAEzDtD,KAAKiD,kBACRG,OAAOC,aAAaE,QAAQ,yBAA0BL,KAAKM,UAAUrB,IACrEnC,KAAKiD,gBAAkBd,GAGzBnC,KAAKyD,eAAiBP,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,0BACxDtD,KAAKyD,iBACRL,OAAOC,aAAaE,QAAQ,wBAAyBL,KAAKM,UAAUpB,IACpEpC,KAAKyD,eAAiBrB,GAGxBpC,KAAKE,SAAS,CACZ1C,QAASgD,WAASC,QAAQhD,QAAQuC,KAAKyD,eAAe/F,UACtDoF,aAAc9C,KAAKyD,eACnBV,UAAW/C,KAAKiD,kBAGlBjD,KAAK0D,QAAUC,aAAY,kBAAM,EAAKC,SAAQ,M,EAGhDC,qBAAA,WACEC,cAAc9D,KAAK0D,U,EAGrBE,KAAA,WAEE5D,KAAKE,SAAS,CAAE1C,QAASgD,WAASC,QAAQhD,QAAQuC,KAAKyD,eAAe/F,a,EAGxEgF,SAAA,WACE,IAAMN,EAAkB,CAAE7E,SAAU,aAAcG,SAAU8C,WAASC,QAAQC,KAAKC,MAClFyC,OAAOC,aAAaE,QAAQ,wBAAyBL,KAAKM,UAAUpB,IACpEgB,OAAOC,aAAaE,QAAQ,yBAA0BL,KAAKM,UAAUrB,IACrEnC,KAAKE,SAAS,CACZ4C,aAAcV,EACdW,UAAWZ,K,EAIfQ,mBAAA,SAAoBoB,GAClB,IAAIrG,EAAW,CAAEH,SAAUwG,EAAYrG,SAAUqG,GACjDX,OAAOC,aAAaE,QAAQ,wBAAyBL,KAAKM,UAAU9F,IACpEsC,KAAKE,SAAS,CAAE4C,aAAcpF,K,EAGhCkF,YAAA,SAAamB,GACX,IAAIC,EAAoB,CAAEzG,SAAUwG,EAAYrG,SAAUqG,GAEtDE,EADef,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,2BAC1BY,OAAO,CAACF,IACxCZ,OAAOC,aAAaE,QAAQ,yBAA0BL,KAAKM,UAAUS,IACrEjE,KAAKE,SAAS,CAAE6C,UAAWkB,K,EAG7BpB,eAAA,SAAgBsB,GACd,IACIC,EADelB,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,2BAC9Be,QAC5B,SAAqB3G,EAAUmB,GAC7B,GAAIA,IAAUsF,EAAe,OAAOzG,KAEtC0F,OAAOC,aAAaE,QAAQ,yBAA0BL,KAAKM,UAAUY,IACrEpE,KAAKE,SAAS,CAAE6C,UAAWqB,K,EAG7B7C,OAAA,WAAW,IAAD,OACF+C,EAAQtE,KAAKV,MAAMyD,UAAUpB,KAAI,SAAC4C,EAAU1F,GAChD,OACE,kBAAC,EAAD,CACEgD,IAAKhD,EACLA,MAAOA,EACPtB,SAAUgH,EAAShH,SACnBG,SAAU6G,EAAS7G,SACnBF,QAAS,EAAK8B,MAAM9B,QACpBc,eAAgB,EAAKgB,MAAMwD,aAAapF,SACxCiB,aAAc,EAAKkE,oBAKzB,OACE,6BACE,yBAAKzF,UAAWC,IAAImH,mBAClB,kBAAC,EAAD,CACEjH,SAAUyC,KAAKV,MAAMwD,aAAavF,SAClCG,SAAUsC,KAAKV,MAAMwD,aAAapF,SAClCF,QAASwC,KAAKV,MAAM9B,UACtB,kBAAC,EAAD,CACEuB,KAAK,OACLrB,SAAUsC,KAAKV,MAAMwD,aAAapF,SAClCkD,oBAAqBZ,KAAK0C,SAC1BzC,mBAAoBD,KAAK2C,sBAG7B,yBAAKvF,UAAWC,IAAIoH,eACjBH,EACD,kBAAC,EAAD,CACEvF,KAAK,WACLM,eAAgBW,KAAK4C,iB,GArHNV,aCGZwC,UAPG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,EAAD","file":"component---src-pages-index-js-4c8d604233688f61112b.js","sourcesContent":["import React from \"react\"\r\nimport css from \"./OriginCard.module.css\"\r\n\r\nfunction OriginCard (props) {\r\n  const timeNowFormat = \"H':'mm':'ss\"\r\n  const dateNowFormat = \"ccc d LLL y\"\r\n  const namedOffsetFormat = \"ZZZZZ\"\r\n  \r\n  return (\r\n    <section className={css.mainTimeGroup}>\r\n      {props.location}:  \r\n      <div className={css.timeNow}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(timeNowFormat)}\r\n      </div>\r\n      <div className={css.dateNow}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(dateNowFormat)}\r\n      </div>\r\n      <div className={css.namedOffsetNow}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(namedOffsetFormat)}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default OriginCard","import React from \"react\"\r\nimport css from \"./Card.module.css\"\r\n\r\nfunction Card (props) {\r\n  const timeNowFormat = \"H':'mm':'ss\"\r\n  const dateNowFormat = \"ccc d LLL y\"\r\n  const namedOffsetFormat = \"ZZZZZ\"\r\n  \r\n  function dayDiffMessage (originTime, targetTime) {\r\n    const origin = originTime.toObject().day\r\n    const target = targetTime.toObject().day\r\n    const difference = target - origin\r\n    \r\n    if (difference === 0) {\r\n      return ``\r\n    } else if (difference === -1) {\r\n      return `(Previous Day)`\r\n    } else if (difference === 1) {\r\n      return `(Next Day)`\r\n    }\r\n  }\r\n  \r\n  function deleteButtonClick () {\r\n    props.deleteButton(props.index)\r\n  }\r\n  \r\n  return (\r\n    <section className={css.timeGroup}>\r\n      {props.location}: \r\n      <div className={css.time}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(timeNowFormat)}\r\n      </div>\r\n      <div className={css.dayDiffMessage}>\r\n        {dayDiffMessage(\r\n          props.timeNow.setZone(props.originTimeZone), \r\n          props.timeNow.setZone(props.timeZone)\r\n        )}\r\n      </div>\r\n      <div className={css.date}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(dateNowFormat)}\r\n      </div>\r\n      <div className={css.namedOffset}>\r\n        {props.timeNow.setZone(props.timeZone).toFormat(namedOffsetFormat)}\r\n      </div>\r\n      <div>\r\n        <button \r\n          className={css.deleteButton}\r\n          onClick={deleteButtonClick}\r\n          >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Card","import React, {Component} from \"react\"\r\nimport {DateTime} from \"luxon\"\r\nimport css from \"./TimeZoneSelector.module.css\"\r\nimport {TIMEZONES_WITH_COMMENTS} from './TIMEZONES_WITH_COMMENTS'\r\n\r\nclass TimeZoneSelector extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.role = props.role\r\n    this.handleMainTextInput = this.handleMainTextInput.bind(this)\r\n    this.handleMainSelectChange = this.handleMainSelectChange.bind(this)\r\n    this.handleAddTextInput = this.handleAddTextInput.bind(this)\r\n    this.resetButtonClick = this.resetButtonClick.bind(this)\r\n    this.addButtonClick = this.addButtonClick.bind(this)\r\n    this.state = {\r\n      selectOptions: TIMEZONES_WITH_COMMENTS,\r\n      addSelectOptions: TIMEZONES_WITH_COMMENTS,\r\n      selectedMainTimezone: this.props.timeZone,\r\n      selectedAddTimezone: this.props.timeZone\r\n    }\r\n  }\r\n  \r\n  handleMainSelectChange (event) {\r\n    const iANATimeZone = event.target.value\r\n    this.props.selectMainTimeZone(iANATimeZone)\r\n    this.setState({selectedMainTimezone: iANATimeZone})\r\n  }\r\n  \r\n  addButtonClick () {\r\n    const select = document.querySelector('.addTimeZoneSelect')\r\n    this.props.addButtonClick(select.value)\r\n  }\r\n  \r\n  resetButtonClick () {\r\n    const input = document.querySelector('.mainTimeZoneInput')\r\n    const addInput = document.querySelector('.addTimeZoneInput')\r\n    input.value = ''\r\n    addInput.value = ''\r\n    this.setState({\r\n      selectOptions: TIMEZONES_WITH_COMMENTS,\r\n      addSelectOptions: TIMEZONES_WITH_COMMENTS,\r\n      selectedMainTimezone: DateTime.local().zone.name,\r\n      selectedAddTimezone: DateTime.local().zone.name\r\n    })\r\n    this.props.resetAllButtonClick()\r\n  }\r\n  \r\n  handleMainTextInput (event) {\r\n    let timeZoneOptions = []\r\n    TIMEZONES_WITH_COMMENTS.forEach(function (timeZone, index) {\r\n      const timeZoneFromData = timeZone.TZ.toLowerCase().trim()\r\n      const inputText = event.target.value.toLowerCase().trim()\r\n      if (timeZoneFromData.indexOf(inputText) !== -1) {\r\n        timeZoneOptions.push(timeZone)\r\n      }\r\n    })\r\n    if (timeZoneOptions.length === 0) {\r\n      timeZoneOptions = TIMEZONES_WITH_COMMENTS\r\n    }\r\n    const iANATimeZone = timeZoneOptions[0].TZ\r\n    this.props.selectMainTimeZone(iANATimeZone)\r\n    this.setState({\r\n      selectOptions: timeZoneOptions,\r\n      selectedMainTimezone: iANATimeZone\r\n    })\r\n  }\r\n  \r\n  handleAddTextInput (event) {\r\n    let timeZoneOptions = []\r\n    TIMEZONES_WITH_COMMENTS.forEach(function (timeZone, index) {\r\n      const timeZoneFromData = timeZone.TZ.toLowerCase().trim()\r\n      const inputText = event.target.value.toLowerCase().trim()\r\n      if (timeZoneFromData.indexOf(inputText) !== -1) {\r\n        timeZoneOptions.push(timeZone)\r\n      }\r\n    })\r\n    if (timeZoneOptions.length === 0) {\r\n      timeZoneOptions = TIMEZONES_WITH_COMMENTS\r\n    }\r\n    const iANATimeZone = timeZoneOptions[0].TZ\r\n    // this.props.selectTimeZone(iANATimeZone)\r\n    this.setState({\r\n      addSelectOptions: timeZoneOptions,\r\n      selectedAddTimezone: iANATimeZone\r\n    })\r\n  }\r\n  \r\n  render () {\r\n    const options = this.state.selectOptions.map((timezone) =>\r\n      <option key={timezone.TZ}>{timezone.TZ}</option>\r\n    )\r\n    \r\n    const addOptions = this.state.addSelectOptions.map((timezone) =>\r\n      <option key={timezone.TZ}>{timezone.TZ}</option>\r\n    )\r\n    \r\n    // let toggleBox\r\n    let inputs\r\n    let buttons\r\n    \r\n    if (this.role === 'Add Card') {\r\n      // toggleBox = (\r\n      //   <div className={css.toggleOptions}>\r\n      //     <span className={css.plusSymbol}>+</span>\r\n      //   </div>\r\n      // )\r\n      inputs = (\r\n        <div>\r\n          {/*toggleBox*/}\r\n          <div className={css.inputContainer}>\r\n            <input className=\"addTimeZoneInput\" onChange={this.handleAddTextInput} />\r\n          </div>\r\n          <select \r\n            value={this.state.selectedMainTimezone} \r\n            name=\"addTimezones\" \r\n            className=\"addTimeZoneSelect\">\r\n            {addOptions}\r\n          </select>\r\n        </div>\r\n      )\r\n      \r\n      buttons = (\r\n        <div>\r\n          <div>\r\n            <button \r\n              className={css.deleteButton}\r\n              onClick={this.addButtonClick}\r\n              >\r\n              Add\r\n            </button>\r\n          </div>\r\n          {/*<div><button className={css.deleteButton}>Hide Options</button></div>*/}\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    if (this.role === 'Main') {\r\n      inputs = (\r\n        <div>\r\n          <div className={css.inputContainer}>\r\n            <input className=\"mainTimeZoneInput\" onChange={this.handleMainTextInput} />\r\n          </div>\r\n          <select \r\n            value={this.state.selectedMainTimezone} \r\n            onChange={this.handleMainSelectChange} \r\n            name=\"timezones\" \r\n            className=\"mainTimeZoneSelect\">\r\n            {options}\r\n          </select>\r\n        </div>\r\n      )\r\n      \r\n      buttons = (\r\n        <div>\r\n          <button \r\n            className={css.deleteButton}\r\n            onClick={this.resetButtonClick}\r\n            >Reset All</button>\r\n        </div>\r\n      )\r\n    } \r\n    \r\n    return (\r\n      <section className={css.mainContainer}>\r\n        {inputs}\r\n        {buttons}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeZoneSelector","const INITIAL_CARD_ZONES = [\r\n  { location: 'Boston', timeZone: 'America/New_York' },\r\n  { location: 'New York', timeZone: 'America/New_York' }, \r\n  { location: 'Freiburg', timeZone: 'Europe/Berlin' },\r\n  { location: 'Los Angeles', timeZone: 'America/Los_Angeles' },\r\n  { location: 'Mumbai', timeZone: 'Asia/Kolkata' },\r\n  { location: 'London', timeZone: 'Europe/London' },\r\n  { location: 'Sydney', timeZone: 'Australia/Sydney' },\r\n  { location: 'Shanghai', timeZone: 'Asia/Shanghai' }\r\n]\r\n\r\nexport {INITIAL_CARD_ZONES}","import React, {Component} from \"react\"\r\nimport {DateTime} from \"luxon\"\r\nimport OriginCard from './OriginCard'\r\nimport Card from './Card'\r\nimport TimeZoneSelector from './TimeZoneSelector'\r\nimport css from \"./TimeRightNow.module.css\"\r\nimport {INITIAL_CARD_ZONES} from './INITIAL_CARD_ZONES'\r\n\r\nconst initialMainZone = { location: 'Local Time', timeZone: DateTime.local().zone.name }\r\n\r\nclass TimeRightNow extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.timeNowFormat = \"H':'mm':'ss\"\r\n    this.dateNowFormat = \"ccc d LLL y\"\r\n    this.namedOffsetFormat = \"ZZZZZ\"\r\n    this.narrowOffsetFormat = \"Z\"\r\n    this.resetAll = this.resetAll.bind(this)\r\n    this.changeMainTimeZone = this.changeMainTimeZone.bind(this)\r\n    this.addTimeZone = this.addTimeZone.bind(this)\r\n    this.removeTimeZone = this.removeTimeZone.bind(this)\r\n    this.state = {\r\n      timeNow: DateTime.local().setZone(initialMainZone.timeZone),\r\n      mainTimeZone: initialMainZone.timeZone,\r\n      cardZones: INITIAL_CARD_ZONES\r\n    }\r\n  }\r\n  \r\n  componentDidMount () {\r\n    this.storedCardZones = JSON.parse(window.localStorage.getItem('timeRightNow-cardZones'))\r\n    // These sorts of checks are problematic.\r\n    if (!this.storedCardZones) {\r\n      window.localStorage.setItem('timeRightNow-cardZones', JSON.stringify(INITIAL_CARD_ZONES))\r\n      this.storedCardZones = INITIAL_CARD_ZONES\r\n    }\r\n    \r\n    this.storedMainZone = JSON.parse(window.localStorage.getItem('timeRightNow-mainZone'))\r\n    if (!this.storedMainZone) {\r\n      window.localStorage.setItem('timeRightNow-mainZone', JSON.stringify(initialMainZone))\r\n      this.storedMainZone = initialMainZone\r\n    }\r\n    \r\n    this.setState({\r\n      timeNow: DateTime.local().setZone(this.storedMainZone.timeZone),\r\n      mainTimeZone: this.storedMainZone,\r\n      cardZones: this.storedCardZones\r\n    })\r\n    \r\n    this.timerID = setInterval(() => this.tick(), 1000)\r\n  }\r\n  \r\n  componentWillUnmount () {\r\n    clearInterval(this.timerID)\r\n  }\r\n  \r\n  tick () {\r\n    // const timeNow = DateTime.local().plus({hours: -3})\r\n    this.setState({ timeNow: DateTime.local().setZone(this.storedMainZone.timeZone) })\r\n  }\r\n  \r\n  resetAll () {\r\n    const initialMainZone = { location: 'Local Time', timeZone: DateTime.local().zone.name }\r\n    window.localStorage.setItem('timeRightNow-mainZone', JSON.stringify(initialMainZone))\r\n    window.localStorage.setItem('timeRightNow-cardZones', JSON.stringify(INITIAL_CARD_ZONES))\r\n    this.setState({\r\n      mainTimeZone: initialMainZone,\r\n      cardZones: INITIAL_CARD_ZONES\r\n    })\r\n  }\r\n  \r\n  changeMainTimeZone (iANATZName) {\r\n    let timeZone = { location: iANATZName, timeZone: iANATZName }\r\n    window.localStorage.setItem('timeRightNow-mainZone', JSON.stringify(timeZone))\r\n    this.setState({ mainTimeZone: timeZone })\r\n  }\r\n  \r\n  addTimeZone (iANATZName) {\r\n    let timeZoneToBeAdded = { location: iANATZName, timeZone: iANATZName }\r\n    let oldTimeZones = JSON.parse(window.localStorage.getItem('timeRightNow-cardZones'))\r\n    let newTimeZones = oldTimeZones.concat([timeZoneToBeAdded])\r\n    window.localStorage.setItem('timeRightNow-cardZones', JSON.stringify(newTimeZones))\r\n    this.setState({ cardZones: newTimeZones })\r\n  }\r\n  \r\n  removeTimeZone (indexToRemove) {\r\n    let oldTimeZones = JSON.parse(window.localStorage.getItem('timeRightNow-cardZones'))\r\n    let filtered = oldTimeZones.filter(checkIndex)\r\n    function checkIndex (timeZone, index) {\r\n      if (index !== indexToRemove) return timeZone\r\n    }\r\n    window.localStorage.setItem('timeRightNow-cardZones', JSON.stringify(filtered))\r\n    this.setState({ cardZones: filtered })\r\n  }\r\n  \r\n  render () {\r\n    const cards = this.state.cardZones.map((cardZone, index) => {\r\n      return (\r\n        <Card\r\n          key={index}\r\n          index={index}\r\n          location={cardZone.location}\r\n          timeZone={cardZone.timeZone}\r\n          timeNow={this.state.timeNow}\r\n          originTimeZone={this.state.mainTimeZone.timeZone}\r\n          deleteButton={this.removeTimeZone}\r\n        />\r\n      )\r\n    })\r\n    \r\n    return (\r\n      <div>\r\n        <div className={css.mainTimeContainer}>\r\n          <OriginCard \r\n            location={this.state.mainTimeZone.location}\r\n            timeZone={this.state.mainTimeZone.timeZone}\r\n            timeNow={this.state.timeNow} />\r\n          <TimeZoneSelector \r\n            role=\"Main\"\r\n            timeZone={this.state.mainTimeZone.timeZone}\r\n            resetAllButtonClick={this.resetAll}\r\n            selectMainTimeZone={this.changeMainTimeZone}\r\n            />\r\n        </div>\r\n        <div className={css.TimeContainer}>\r\n          {cards}\r\n          <TimeZoneSelector \r\n            role=\"Add Card\"\r\n            addButtonClick={this.addTimeZone}\r\n            />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TimeRightNow\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport TimeRightNow from '../components/TimeRightNow/TimeRightNow'\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <TimeRightNow />\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}